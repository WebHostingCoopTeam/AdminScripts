#!/bin/bash
if [ $# -ne 2 ]; then
  # Print usage
  echo 'Error! wrong number of arguments'
  echo 'usage:'
  echo "$0 DOMAIN DESIRED_FIRST.DESIRED_SECOND.DESIRED_THIRD"
  echo 'e.g.'
  echo "$0 example.com 192.168.2"
  echo '  ~example results~
Error, no IP address returned for example.com -> not on coop ptr ptr:
CPANEL Error, ip range 10.2.1 for example.org -> not on coop ptr 10.2.1.24 10.2.1.25 ptr:foobar.baz'

  exit 1
fi

CHECK_DOMAIN=$1
DESIRED_FIRST=$(echo $2|cut -f1 -d.)
DESIRED_SECOND=$(echo $2|cut -f2 -d.)
DESIRED_THIRD=$(echo $2|cut -f3 -d.)

DUG=$(dig +short $CHECK_DOMAIN|tr '\n' ' ')
first_octet=$(echo $DUG|cut -f1 -d.)
second_octet=$(echo $DUG|cut -f2 -d.)
third_octet=$(echo $DUG|cut -f3 -d.)
fourth_octet=$(echo $DUG|cut -f4 -d.)
error_msg='Error'
errored=0
cpanel_string='If you are the owner of this website, please contact your hosting provider'

check_for_cpanel_error () {
  check_domain_for_cpanel=$1
  regex_to_check=$2
  slurpy=$(curl --silent -L $check_domain_for_cpanel)
  if [[ $slurpy =~ $regex_to_check ]]; then
    ((++errored))
    error_msg="CPANEL $error_msg"
  fi
}

main () {
# no indent for main
if   [[ $first_octet -eq $DESIRED_FIRST ]]; then
  first_octet=x
else
  ((++errored))
fi
if [[ $second_octet -eq $DESIRED_SECOND ]]; then
  second_octet=x
else
  ((++errored))
fi
if [[ $third_octet -eq $DESIRED_THIRD ]]; then
  third_octet=x
else
  ((++errored))
fi
if [[ -z "${DUG// }" ]]; then
  DUGX=''
  octets="no IP address returned"
  ((++errored))
else
  octets="ip range $first_octet.$second_octet.$third_octet"
  DUGX=$(echo $DUG |tr ' ' '\n'|xargs -n1 -I% dig -x % +short)
  DUGX=$(echo $DUGX |tr '\n' ',')
fi
if [[ $DUGX =~ 'webhosting.coop' ]]; then
  check_coop_ptr=""
else
  check_coop_ptr="not on coop ptr"
fi

check_for_cpanel_error $CHECK_DOMAIN $cpanel_string

if [ "$errored" -gt 0 ]; then
    error_msg="$error_msg, $octets for $CHECK_DOMAIN -> $check_coop_ptr $DUG ptr:$DUGX"
    error_msg=$(echo $error_msg|tr '\n' ','|sed 's/,*$//')
    echo "$error_msg"
    exit 1
fi
}

main $@
