#!/bin/bash
if [ $# -ne 2 ]; then
  # Print usage
  echo 'Error! wrong number of arguments'
  echo 'usage:'
  echo "$0 DOMAIN DESIRED_FIRST.DESIRED_SECOND.DESIRED_THIRD"
  echo 'e.g.'
  echo "$0 example.com 192.168.2"
  echo '  ~example results~
Error no IP address returned for example.com -> not on coop ptr ptr:
CPANEL Error, ip 10.2.1.x for example.org -> not on coop ptr 10.2.1.24 10.2.1.25 ptr:foobar.baz'
  exit 1
fi

CHECK_DOMAIN=$1
DESIRED_FIRST=$(echo $2|cut -f1 -d.)
DESIRED_SECOND=$(echo $2|cut -f2 -d.)
DESIRED_THIRD=$(echo $2|cut -f3 -d.)

DUG=$(dig +short $CHECK_DOMAIN|tr '\n' ' ')
first_octet=z
second_octet=z
third_octet=z
fourth_octet=z
error_msg='Error'
errored=0
cpanel_string='If you are the owner of this website, please contact your hosting provider'
check_coop_ptr=""

check_ptr () {
  if [[ $1 =~ $2 ]]; then
    check_coop_ptr="$check_coop_ptr is on $2 ptr"
  else
    check_coop_ptr="$check_coop_ptr is not on $2 ptr"
  fi
}

check_for_cpanel_error () {
  check_domain_for_cpanel=$1
  regex_to_check=$2
  slurpy=$(curl --silent -L $check_domain_for_cpanel)
  if [[ $slurpy =~ $regex_to_check ]]; then
    ((++errored))
    error_msg="CPANEL $error_msg"
  fi
}
check_octets () {
  first_octet=$(echo $DUG|cut -f1 -d.)
  second_octet=$(echo $DUG|cut -f2 -d.)
  third_octet=$(echo $DUG|cut -f3 -d.)
  fourth_octet=$(echo $DUG|cut -f4 -d.)
  if   [[ $first_octet -eq $DESIRED_FIRST ]]; then
    first_octet=x
  else
    ((++errored))
  fi
  if [[ $second_octet -eq $DESIRED_SECOND ]]; then
    second_octet=x
  else
    ((++errored))
  fi
  if [[ $third_octet -eq $DESIRED_THIRD ]]; then
    third_octet=x
  else
    ((++errored))
  fi
}

main () {

  if [[ -z "${DUG// }" ]]; then
    error_msg="$error_msg no IP address returned for ${CHECK_DOMAIN}"
    ((++errored))
  else
    check_octets
    check_ptr "$DUGX" 'webhosting.coop'
    check_for_cpanel_error $CHECK_DOMAIN $cpanel_string
    octets="$first_octet.$second_octet.$third_octet.x"
    DUGX=$(echo $DUG |tr ' ' '\n'|xargs -n1 -I% dig -x % +short)
    DUGX=$(echo "={ptr}> $DUGX $check_coop_ptr" |tr '\n' ',')
    error_msg="$error_msg $octets ${CHECK_DOMAIN}->$DUG $DUGX"
  fi

  if [ "$errored" -gt 0 ]; then
      error_msg=$(echo $error_msg|tr '\n' ','|sed 's/,*$//')
      echo "$error_msg"
      exit 1
  fi
}

main $@
